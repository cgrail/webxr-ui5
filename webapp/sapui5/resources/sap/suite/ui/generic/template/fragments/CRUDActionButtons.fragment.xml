<core:FragmentDefinition
    xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
    xmlns="sap.m" xmlns:build="sap.build" xmlns:core="sap.ui.core">

	<template:if test="{path: 'parameter>/settings/routeConfig/', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isListReportTemplate'}">
		<template:then>
			<template:if test="{= ${listEntitySet>Org.OData.Capabilities.V1.DeleteRestrictions/Deletable/Bool} !== 'false' &amp;&amp; (${parameter>/settings/tableType} === 'ResponsiveTable' || ${parameter>/settings/tableType} !== 'AnalyticalTable' &amp;&amp; ${parameter>/settings/tableType} !== 'GridTable' &amp;&amp; ${listEntityType>sap:semantics} !== 'aggregate' &amp;&amp; !${parameter>/settings/gridTable})}">
				<template:then>
					<Button 
	        			id="deleteEntry{= ${parameter>/settings/quickVariantSelectionX} ? ${path: 'tabItem>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSuffixFromIconTabFilterKey'} : ''}"
	                	text="{i18n>DELETE}"
	                	press="._templateEventHandlers.deleteEntries" 
	                	type="Transparent" 
	                	enabled="{_templPriv>/listReport/deleteEnabled}">
						<customData>
	                    	<core:CustomData key="Type" value="CRUDActionDelete"/>
	                	</customData>
					</Button>
				</template:then>
	        </template:if>
			<template:if test="{= ${listEntitySet>Org.OData.Capabilities.V1.InsertRestrictions/Insertable/Bool} !== 'false' || ${parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getCreateNavigationIntent'}}">
				<template:then>
					<template:if test="{= !!${parameter>/settings/createWithFilters} }">
						<template:then>
							<MenuButton icon="sap-icon://add" id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportAction', subType: 'CreateMenu', sQuickVariantKey: ${tabItem>key}})}">
								<menu>
									<Menu>
										<items>
											<MenuItem text="{i18n>CREATE_NEW_OBJECT}" tooltip="{i18n>CREATE_NEW_OBJECT}"
												id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportAction', subType: 'Create', sQuickVariantKey: ${tabItem>key}})}"
												press="._templateEventHandlers.addEntry" >
												<customData>
													<core:CustomData key="CrossNavigation"
														value="{parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getCreateNavigationIntent'}" />
												</customData>
											</MenuItem>
											<MenuItem text="{i18n>ST_CREATE_WITH_FILTERS}" tooltip="{i18n>ST_CREATE_WITH_FILTERS}"
												id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportAction', subType: 'CreateWithFilter', sQuickVariantKey: ${tabItem>key}})}"
												enabled="{= ${_templPriv>/generic/bDataAreShownInTable}}"
												press="._templateEventHandlers.addEntryWithFilters" >
												<customData>
													<core:CustomData key="CrossNavigation"
														value="{parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getCreateNavigationIntent'}" />
												</customData>
											</MenuItem>
										</items>
									</Menu>
								</menu>
							</MenuButton>
						</template:then>
						<template:else>
							<OverflowToolbarButton
								id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportAction', subType: 'Create', sQuickVariantKey: ${tabItem>key}})}"
								icon="sap-icon://add"
								tooltip="{i18n>CREATE_NEW_OBJECT}"
								text="{i18n>CREATE_NEW_OBJECT}"
								press="._templateEventHandlers.addEntry"
								type="Transparent"
								visible="true">
								<customData>
									<core:CustomData key="CrossNavigation"
										value="{parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getCreateNavigationIntent'}" />
								</customData>
							</OverflowToolbarButton>
						</template:else>
					</template:if>
				</template:then>
			</template:if>
		</template:then>
		<template:else>
			<template:with path="parameter>/" helper="sap.suite.ui.generic.template.js.StableIdHelper.preparePathForStableId" var="facetId">
				<template:if test="{= ${facetId>}.buildFacetId(${facet>})}" />
				<template:if test="{= ${listEntitySet>Org.OData.Capabilities.V1.DeleteRestrictions/Deletable/Bool} !== 'false'}">
					<Button
						id="{:= ${parameter>/stableId}.getStableId({ type:'ObjectPageAction', subType:'Delete', sFacet: ${facetId>id}}) }"
			            text="{i18n>DELETE}"
		                press="._templateEventHandlers.deleteEntries" type="Transparent"
						enabled="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.buildDeleteButtonEnablementExpression'}"
						visible="{= ${parameter>/isDraftEnabled} ? '{ui>/editable}' : '{= !${ui>/editable} }' }">
						<customData>
	                    	<core:CustomData key="Type" value="CRUDActionDelete"/>
	                	</customData>
	           		</Button>
				</template:if>
				<template:if test="{= ${listEntitySet>Org.OData.Capabilities.V1.InsertRestrictions/Insertable/Bool} !== 'false'}">
					<OverflowToolbarButton
						id="{:= ${parameter>/stableId}.getStableId({ type:'ObjectPageAction', subType:'Create', sFacet: ${facetId>id}}) }"
						icon="sap-icon://add"
						press="._templateEventHandlers.addEntry"
						tooltip="{i18n>ADD}"
						text="{i18n>ADD}"
						visible="{parts: [{path: 'entitySet>'}, {path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>'}, {path: 'parameter>/settings/sections'},{path: 'parameter>/isDraftEnabled'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isRelatedEntityCreatable'}">
					</OverflowToolbarButton>
				</template:if>
			</template:with>
		</template:else>
	</template:if>

</core:FragmentDefinition>