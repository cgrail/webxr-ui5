<core:FragmentDefinition xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
						 xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:l="sap.ui.layout"
						 xmlns:smartlink="sap.ui.comp.navpopover"
						 xmlns:sfi="sap.ui.comp.smartfield" xmlns:uxap="sap.uxap" xmlns:build="sap.build" xmlns:f="sap.f" >
			<template:if test="{= !${parameter>/settings/simpleHeaderFacets} }">
				<template:with path="parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details"
								var="manifestViewExtensions">
					<template:if test="{entityType>com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl}" build:metadata="#ignore">
						<template:then build:metadata="#ignore">
							<template:if test="{= ${parameter>/manifest/sap.ui.generic.app/settings/objectPageDynamicHeaderTitleWithVM} === true}">
								<template:then>
									<f:Avatar id="objectImage"
										src="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl'}, {path: 'parameter>/appComponentName'}, {path: 'parameter>/helper/bool/true'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
										displaySize="L"
										displayShape="Square"
										press="._templateEventHandlers.onHeaderImagePress"
										class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderAvatar"/>
								</template:then>
								<template:else>
									<Image id="objectImage"
										src="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl'}, {path: 'parameter>/appComponentName'}, {path: 'parameter>/helper/bool/true'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
										press="._templateEventHandlers.onHeaderImagePress"
										alt="{_templPriv>/objectPage/headerInfo/objectTitle}"
										densityAware="false"
										decorative="false"
										class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderImage"
										build:metadata="#pattern:Header;prop:src:ImageSource"/>
								</template:else>
							</template:if>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterImageExists' }">
								<VBox id="AfterImageExtensionFacet::objectImage">
									<core:ExtensionPoint name="AfterImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:then>
						<template:elseif test="{entityType>com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl}">
							<template:if test="{= ${parameter>/manifest/sap.ui.generic.app/settings/objectPageDynamicHeaderTitleWithVM} === true}">
								<template:then>
									<f:Avatar id="objectTypeImage"
										src="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl'}, {path: 'parameter>/appComponentName'}, {path: 'parameter>/helper/bool/true'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
										displaySize="L"
										displayShape="Square"
										press="._templateEventHandlers.onHeaderImagePress"
										class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderAvatar"/>
								</template:then>
								<template:else>
									<Image id="objectTypeImage"
										src="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl'}, {path: 'parameter>/appComponentName'}, {path: 'parameter>/helper/bool/true'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
										press="._templateEventHandlers.onHeaderImagePress"
										alt="{_templPriv>/objectPage/headerInfo/objectTitle}"
										densityAware="false"
										class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderImage"/>
								</template:else>
							</template:if>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterImageExists' }">
								<VBox id="AfterImageExtensionFacet::objectTypeImage">
									<core:ExtensionPoint name="AfterImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:elseif>
						<template:else>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointNoImageExists' }">
						<!-- 	Image should be first element to be rendered hence used sapUxAPObjectPageHeaderObjectImage class to put Image border-->
								<VBox id="NoImageExtensionFacet" class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderImage" >
									<core:ExtensionPoint name="NoImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:else>
					</template:if>
				</template:with>
			</template:if>

			<template:if test="{entityType>com.sap.vocabularies.UI.v1.HeaderFacets}">
				<template:then>
				<template:with path="parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details"
							   var="manifestViewExtensions">
					<template:with path="entityType>com.sap.vocabularies.UI.v1.HeaderFacets"
								   var="headerFacets">
						<template:repeat list="{headerFacets>}" var="headerFacet">
							<template:if test="{parameter>/settings/simpleHeaderFacets}">
								<template:then>
									<!-- New code for simple header facets -->
									<template:if
											test="{= ${headerFacet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.Identification') >= 0}">
										<template:then>
											<template:with path="headerFacet>Target"
														   helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="form">
												<template:repeat list="{form>}" var="dataField">
													<template:if
															test="{= ${dataField>RecordType} !== 'com.sap.vocabularies.UI.v1.DataFieldForAction'}">
														<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeSimpleHeaderFacetExists' }">
															<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::BeforeIdentificationExtension">
																<core:ExtensionPoint name="BeforeSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
															</HBox>
														</template:if>
														<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceSimpleHeaderFacetExists' }">
															<template:then>
																<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::ReplaceIdentificationExtension">
																	<core:ExtensionPoint name="ReplaceSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
																</HBox>
															</template:then>
															<template:else>
																<HBox class="sapSmartTemplatesObjectPageHeaderForm">
																	<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFormDataField"
																					type="XML" build:metadata="#ignore"/>
																</HBox>
															</template:else>
														</template:if>
														<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterSimpleHeaderFacetExists' }">
															<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::AfterIdentificationExtension">
																<core:ExtensionPoint name="AfterSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
															</HBox>
														</template:if>
													</template:if>
												</template:repeat>
											</template:with>
										</template:then>
										<template:elseif
												test="{= ${headerFacet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.FieldGroup') >= 0}">
											<template:with path="headerFacet>Target"
														   helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="form">
												<template:repeat list="{form>Data}" var="dataField">
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeSimpleHeaderFacetExists' }">
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::BeforeFGExtension">
															<core:ExtensionPoint name="BeforeSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
														</HBox>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceSimpleHeaderFacetExists' }">
														<template:then>
															<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::ReplaceFGExtension">
																<core:ExtensionPoint name="ReplaceSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
															</HBox>
														</template:then>
														<template:else>
															<HBox class="sapSmartTemplatesObjectPageHeaderForm">
																<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFormDataField"
																				type="XML" build:metadata="#ignore"/>
															</HBox>
														</template:else>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterSimpleHeaderFacetExists' }">
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::AfterFGExtension">
															<core:ExtensionPoint name="AfterSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
														</HBox>
													</template:if>
												</template:repeat>
											</template:with>
										</template:elseif>
										<template:elseif
												test="{= ${headerFacet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.DataPoint') >= 0}">
											<template:with path="headerFacet>Target"
														   helper="sap.ui.model.odata.AnnotationHelper.resolvePath"
														   var="dataPoint">
												<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeSimpleHeaderFacetExists' }">
													<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::BeforeDPExtension">
														<core:ExtensionPoint name="BeforeSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
													</HBox>
												</template:if>
												<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceSimpleHeaderFacetExists' }">
													<template:then>
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::ReplaceDPExtension">
															<core:ExtensionPoint name="ReplaceSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
														</HBox>
													</template:then>
													<template:else>
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::DataPoint"
															  displayInline="true"
															  class="sapSmartTemplatesObjectPageHeaderForm"
															  binding="{parts: [{path: 'headerFacet>Target'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getNavigationPathWithExpand'}">
															<HBox>
																<core:Fragment
																		fragmentName="sap.suite.ui.generic.template.fragments.HeaderDataPointContent"
																		type="XML"/>
															</HBox>
														</HBox>
													</template:else>
												</template:if>
												<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterSimpleHeaderFacetExists' }">
													<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::AfterDPExtension">
														<core:ExtensionPoint name="AfterSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
													</HBox>
												</template:if>
											</template:with>
										</template:elseif>
									</template:if>
								</template:then>
								<template:else>
									<!-- Previous code for standard header facets-->
									<template:if
											test="{= ${headerFacet>RecordType}.indexOf('com.sap.vocabularies.UI.v1.ReferenceFacet') >= 0 }">
										<template:then>
											<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeHeaderFacetExists'}">
												<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::BeforeReferenceExtension" >
													<core:ExtensionPoint name="BeforeHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
												</VBox>
											</template:if>
											<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceHeaderFacetExists'}">
												<template:then>
													<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::ReplaceReferenceExtension" >
														<core:ExtensionPoint name="ReplaceHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
													</VBox>
												</template:then>
												<template:else>
													<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFacet"
																	type="XML"/>
												</template:else>
											</template:if>
											<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterHeaderFacetExists'}">
												<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::AfterReferenceExtension" >
													<core:ExtensionPoint name="AfterHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
												</VBox>
											</template:if>
										</template:then>
										<template:elseif
												test="{= ${headerFacet>RecordType}.indexOf('com.sap.vocabularies.UI.v1.CollectionFacet') >= 0 }">
											<VBox displayInline="true" class="sapSmartTemplatesObjectPageHeaderCollection">
												<template:repeat list="{headerFacet>Facets}"
																 var="headerFacet">
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeHeaderFacetExists'}">
														<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::BeforeCollectionExtension" >
															<core:ExtensionPoint name="BeforeHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
														</VBox>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceHeaderFacetExists'}">
														<template:then>
															<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::ReplaceCollectionExtension" >
																<core:ExtensionPoint name="ReplaceHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
															</VBox>
														</template:then>
														<template:else>
															<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFacet"
																			type="XML"/>
														</template:else>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterHeaderFacetExists'}">
														<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::AfterCollectionExtension" >
															<core:ExtensionPoint name="AfterHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
														</VBox>
													</template:if>
												</template:repeat>
											</VBox>
										</template:elseif>
									</template:if>
								</template:else>
							</template:if>
						</template:repeat>
					</template:with>
				</template:with>
				</template:then>
				<template:else>
					<template:with path="parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details"
									var="manifestViewExtensions">
						<template:repeat
								list="{path:'entityType>', filters: {path: '@sapui.name', operator: 'StartsWith', value1: 'com.sap.vocabularies.UI.v1.DataPoint'}}"
								var="dataPoint">
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'dataPoint>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeHeaderDataPointExists'}">	
								<l:VerticalLayout
									id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::BeforeDataPointExtension">
									<core:ExtensionPoint name="BeforeHeaderDataPoint|{entitySet>name}|{path: 'dataPoint>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
								</l:VerticalLayout>
							</template:if>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'dataPoint>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceHeaderDataPointExists'}">
								<template:then>
									<l:VerticalLayout
										id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::ReplaceDataPointExtension">
										<core:ExtensionPoint name="ReplaceHeaderDataPoint|{entitySet>name}|{path: 'dataPoint>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
									</l:VerticalLayout>
								</template:then>
								<template:else>
									<l:VerticalLayout
											id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}"
											class="sapSmartTemplatesObjectPageDataPoint" build:metadata="#pattern:Header>>KPI;">
										<Label id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::Label"
											   labelFor="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::Value"
											   text="{path: 'dataPoint>Title', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatWithExpandSimple'}"
											   class="sapSmartTemplatesObjectPageDataPointLabel"
											   build:metadata="#pattern:Header>>KPI;staticProp:text:Title;condition:dataPoint>RecordType:com.sap.vocabularies.UI.v1.DataPoint"/>
										<sfi:SmartField
												id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::Value"
												contextEditable="false" uomEditable="false" enabled="true" clientSideMandatoryCheck="false"
												value="{parts: [{path: 'dataPoint>Value'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatWithExpand'}"
												class="sapSmartTemplatesObjectPageDataPointValue {= ${dataPoint>Value/EdmType} === 'Edm.Byte' || ${dataPoint>Value/EdmType} === 'Edm.Decimal' || ${dataPoint>Value/EdmType} === 'Edm.Double' ||  ${dataPoint>Value/EdmType} === 'Edm.Float' ||  ${dataPoint>Value/EdmType} === 'Edm.Int16' ||  ${dataPoint>Value/EdmType} === 'Edm.Int32' || ${dataPoint>Value/EdmType} === 'Edm.Int64' ||  ${dataPoint>Value/EdmType} === 'Edm.SByte' ? 'sapSmartTemplatesObjectPageDataPointNumericValue' : 'sapSmartTemplatesObjectPageDataPointTextualValue'}"
												build:metadata="#pattern:Header>>KPI;prop:value:Value;prop:currency:Currency:\{dataPoint>Value@@Org.OData.Measures.V1.ISOCurrency\}"
												fetchValueListReadOnly="false">
											<sfi:semanticObjectController>
												<smartlink:SemanticObjectController beforePopoverOpens="._templateEventHandlers.onBeforeSemanticObjectLinkPopoverOpens"
																					navigate="._templateEventHandlers.onSemanticObjectLinkPopoverLinkPressed"
																					navigationTargetsObtained="._templateEventHandlers.onSemanticObjectLinkNavigationTargetObtained"
																					forceLinkRendering="{parts: [{path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.hasQuickViewFacet'}"/>
											</sfi:semanticObjectController>
											<template:if test="{= ${dataPoint>Criticality} }">
												<sfi:controlProposal>
													<sfi:ControlProposal>
														<sfi:objectStatus>
															<sfi:ObjectStatus
																	criticality="{path: 'dataPoint>Criticality', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}"
																	criticalityRepresentationType="WithoutIcon"/>
														</sfi:objectStatus>
													</sfi:ControlProposal>
												</sfi:controlProposal>
											</template:if>
										</sfi:SmartField>
									</l:VerticalLayout>
								</template:else>
							</template:if>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'dataPoint>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterHeaderDataPointExists'}">	
								<l:VerticalLayout
									id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::AfterDataPointExtension">
									<core:ExtensionPoint name="AfterHeaderDataPoint|{entitySet>name}|{path: 'dataPoint>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
								</l:VerticalLayout>
							</template:if>
						</template:repeat>
					</template:with>
				</template:else>
			</template:if>

</core:FragmentDefinition>