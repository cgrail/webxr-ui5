<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>layout/MatrixLayoutRow</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>Non-control element used as part of a matrix layout's inner structure.</documentation>
    <deprecation since="1.38">Instead, use the &lt;code&gt;sap.ui.layout.Grid&lt;/code&gt; control.</deprecation>
    <baseType>sap.ui.core/Element</baseType>
    <properties>
        <property name="height" type="sap.ui.core/CSSSize" group="Dimension">
            <documentation>Height of the row.</documentation>
        </property>
    </properties>
    <aggregations default="cells">
        <aggregation name="cells" type="sap.ui.commons/layout/MatrixLayoutCell" cardinality="0..n">
            <documentation>The matrix layout row's individual cells.</documentation>
        </aggregation>
    </aggregations>
    <methods>
        <method name="addStyleClass" type="sap.ui.commons/layout/MatrixLayoutRow">
            <documentation>The string given as "sStyleClass" will be added to the "class" attribute of this element's root HTML element.

This method is intended to be used to mark controls as being of a special type for which
special styling can be provided using CSS selectors that reference this style class name.

&lt;pre&gt;
Example:
myButton.addStyleClass("myRedTextButton"); // add a CSS class to one button instance

...and in CSS:
.myRedTextButton {
color: red;
}
&lt;/pre&gt;

This will add the CSS class "myRedTextButton" to the Button HTML and the CSS code above will then
make the text in this particular button red.

Only characters allowed inside HTML attributes are allowed.
Quotes are not allowed and this method will ignore any strings containing quotes.
Strings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them
as different classes) and can only removed later by calling removeStyleClass() with exactly the
same (space-containing) string as parameter.
Multiple calls with the same sStyleClass will have no different effect than calling once.
If sStyleClass is null, the call is ignored.

Returns &lt;code&gt;this&lt;/code&gt; to allow method chaining</documentation>
            <parameters>
                <parameter name="styleClass" type="sap.ui.core/string">
                    <documentation>the CSS class name to be added</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="removeStyleClass" type="sap.ui.commons/layout/MatrixLayoutRow">
            <documentation>Removes the given string from the list of custom style classes that have been set previously.
Regular style classes like "sapUiBtn" cannot be removed.

Returns &lt;code&gt;this&lt;/code&gt; to allow method chaining</documentation>
            <parameters>
                <parameter name="styleClass" type="sap.ui.core/string">
                    <documentation>the style to be removed</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="hasStyleClass" type="sap.ui.core/boolean">
            <documentation>Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().</documentation>
            <parameters>
                <parameter name="styleClass" type="sap.ui.core/string">
                    <documentation>the style to check for</documentation>
                </parameter>
            </parameters>
        </method>
    </methods>
</control>
