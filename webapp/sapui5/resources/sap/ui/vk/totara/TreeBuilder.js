sap.ui.define(["jquery.sap.global","./ListMap","./TotaraUtils"],function(q,L,T){"use strict";var a=function(){};a.getPartialTreeNodes=function(t,c,s){var p=[];var b=[];var i,j,d;if(t&&t.length){for(i=0;i<t.length;i++){d=t[i];if(d&&d.children){for(j=0;j<d.children.length;j++){var e=d.children[j];t[e].parentNode=d;if(d.renderOrder){t[e].renderOrder=d.renderOrder;}}}}}if(t&&t.length){for(i=0;i<t.length;i++){d=t[i];if(d.parent){p.push(d);}else if(!d.parentNode){p.push(d);if(c&&c.rootNodeId){d.parent=c.rootNodeId;}}if(c&&c.nodeSidsForPartialTree.has(d.sid)){b.push(d);}}}if(c){c.nodeSidsForPartialTree.clear();}if(!b.length){return p;}p=[];for(j=0;j<b.length;j++){var n=b[j];var f=n.parentNode;while(f){if(s.sceneBuilder.getNode(f.sid,c.sceneId)){n.parent=f.sid;p.push(n);break;}else{n=f;f=f.parentNode;}}}if(p.length){return p;}else{return b;}};a.buildTree=function(s,c){var r={};if(!c.treeNodes||!c.treeNodes.length){r.error="no tree information";return r;}var t=c.treeNodes;var p=a.getPartialTreeNodes(t,c,s);c.replacedNodes.clear();var b=[];var i;var d;for(i=0;i<p.length;i++){d=p[i].parent;if(s.sceneBuilder.getNode(d,c.sceneId)){a.buildNode(s,c,p[i],d);}else{b.push(p[i]);}}for(i=0;i<b.length;i++){d=b[i].parent;if(s.sceneBuilder.getNode(d,c.sceneId)){a.buildNode(s,c,p[i],d);}else{if(!r.error){r.error="";}r.error+="parent ${parentSid} does not exist in the scene. \n";}}c.treeNodes=[];c.progressCount.mesh.total=c.meshGroupListMap.size;return r;};a.buildNode=function(s,c,t,p){if(!t||!p){T.reportError(s,c,"totaraTreeBuilder - buildNode - invalid args");return;}var e=s.sceneBuilder.getNode(t.sid,c.sceneId);if(e){s.sceneBuilder.remove(t.sid,c.sceneId);}if(t.suppressed===true){return;}if(!t.sid){T.reportError(s,c,"sid is missing in treeNode");return;}var r=s.sceneBuilder.createNode(t,p,c.sceneId);if(r.needSetSubmesh){var m=c.meshGroupListMap;var g=m.getOrCreate(t.meshId);g.push(t.sid);}if(t.annotationId){c.annotationNodeMap.set(t.annotationId,t.sid);}if(r.needUpdateMaterial){s.materialIdsToRequest.add(t.materialId);}if(r.materialIds.length){for(var b=0;b<r.materialIds.length;b++){var n=c.materialIdNodeListMapForOpacityUpdate.getOrCreate(r.materialIds[b]);n.push(t.sid);}}var d=s.sceneBuilder.getNode(t.sid,c.sceneId);if(e&&d){c.replacedNodes.set(e,d);}if(t.children){var f=c.treeNodes;for(var i=0;i<t.children.length;i++){var h=t.children[i];a.buildNode(s,c,f[h],t.sid);}}};return a;});
